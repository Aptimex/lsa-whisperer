[
uuid(4f32adc8-6052-4a04-8701-293ccf2096f0),
version(1.0),
]
interface sspirpc {

typedef long LSA_OPERATIONAL_MODE_LPC;
typedef long* PLSA_OPERATIONAL_MODE_LPC;

// Security buffer types
#define SECBUFFER_EMPTY             0   // Undefined, replaced by provider
#define SECBUFFER_DATA              1   // Packet data
#define SECBUFFER_TOKEN             2   // Security token
#define SECBUFFER_PKG_PARAMS        3   // Package specific parameters
#define SECBUFFER_MISSING           4   // Missing Data indicator
#define SECBUFFER_EXTRA             5   // Extra data
#define SECBUFFER_STREAM_TRAILER    6   // Security Trailer
#define SECBUFFER_STREAM_HEADER     7   // Security Header
#define SECBUFFER_NEGOTIATION_INFO  8   // Hints from the negotiation pkg
#define SECBUFFER_PADDING           9   // non-data padding
#define SECBUFFER_STREAM            10  // whole encrypted message
#define SECBUFFER_MECHLIST          11  
#define SECBUFFER_MECHLIST_SIGNATURE 12 
#define SECBUFFER_TARGET            13
#define SECBUFFER_CHANNEL_BINDINGS  14
#define SECBUFFER_ATTRMASK          		0xF0000000
#define SECBUFFER_READONLY          		0x80000000  // Buffer is read-only, no checksum
#define SECBUFFER_READONLY_WITH_CHECKSUM	0x10000000  // Buffer is read-only, and checksummed
#define SECBUFFER_RESERVED          		0x60000000  // Flags reserved to security system

typedef struct _SEC_BUFFER_LPC {
    unsigned long cbBuffer;
    unsigned long BufferType;
	[unique][size_is(cbBuffer)] char* pvBuffer;
} SEC_BUFFER_LPC;

typedef struct _SPMCallbackAPI {
	unsigned long Type;
	unsigned __int3264 CallbackFunction;
	unsigned __int3264 Argument1;
	SEC_BUFFER_LPC Argument2;
	char StructMember4;
} SPMCallbackAPI;

typedef struct Struct_172_t {
	hyper StructMember0;
	hyper StructMember1;
} Struct_172_t;

typedef struct Struct_222_t {
	short StructMember0;
	short StructMember1;
	[unique] [size_is(StructMember1/2)] [length_is(StructMember0/2)] short* StructMember2;
} Struct_222_t;

typedef struct Struct_248_t {
	long StructMember0;
	long StructMember1;
} Struct_248_t;

typedef struct Struct_282_t {
	long StructMember0;
	hyper StructMember1;
	[unique] [size_is(StructMember0)] char* StructMember2;
} Struct_282_t;

typedef struct Struct_304_t {
	hyper StructMember0;
	hyper StructMember1;
} Struct_304_t;

typedef struct Struct_316_t {
	hyper StructMember0;
} Struct_316_t;

typedef struct Struct_446_t {
	long StructMember0;
	long StructMember1;
	[unique] [size_is(StructMember1)] SEC_BUFFER_LPC* StructMember2;
} Struct_446_t;

typedef struct Struct_466_t {
	long StructMember0;
	long StructMember1;
} Struct_466_t;

typedef struct Struct_516_t {
	long StructMember0;
	long StructMember1;
	[unique] [size_is(StructMember1)] struct Struct_466_t* StructMember2;
} Struct_516_t;

typedef [switch_type(unsigned long)] union union_624 {
	[case(1)] [unique] struct Struct_658_t* unionMember_1;
	[case(86)] [unique] struct Struct_676_t* unionMember_86;
	[case(87)] [unique] struct Struct_696_t* unionMember_87;
	[case(88)] [unique] struct Struct_708_t* unionMember_88;
	[default] ;
} union_624;


typedef struct Struct_658_t {
	[unique] [string] wchar_t* StructMember0;
} Struct_658_t;

typedef struct Struct_676_t {
	long StructMember0;
	[unique] long* StructMember1;
} Struct_676_t;

typedef struct Struct_696_t {
	long StructMember0;
	long StructMember1;
} Struct_696_t;

typedef struct Struct_708_t {
	long StructMember0;
} Struct_708_t;

typedef [switch_type(unsigned long)] union union_750 {
	[case(0)] [unique] struct Struct_772_t* unionMember_0;
	[case(12)] [unique] struct Struct_810_t* unionMember_12;
	[default];
} union_750;


typedef struct Struct_772_t {
	long StructMember0;
	long StructMember1;
	long StructMember2;
	long StructMember3;
} Struct_772_t;

typedef struct Struct_786_t {
	long StructMember0;
	short StructMember1;
	short StructMember2;
	long StructMember3;
	[unique][string] wchar_t* StructMember4;
	[unique][string] wchar_t* StructMember5;
} Struct_786_t;

typedef struct Struct_810_t {
	[unique]struct Struct_786_t* StructMember0;
	long StructMember1;
} Struct_810_t;

typedef struct Struct_848_t {
	long StructMember0;
	short StructMember1;
	short StructMember2;
	byte StructMember3[8];
} Struct_848_t;

typedef struct Struct_888_t {
	long StructMember0;
	struct Struct_848_t StructMember1;
	long StructMember2;
	long StructMember3;
	long StructMember4;
	long StructMember5;
	long StructMember6;
	[unique] [string] wchar_t* StructMember7;
	[unique] [string] wchar_t* StructMember8;
} Struct_888_t;

typedef struct Struct_984_t {
	short StructMember0;
	short StructMember1;
	[unique] [size_is(StructMember1)] [length_is(StructMember0)] char* StructMember2;
} Struct_984_t;

typedef struct Struct_1016_t {
	char StructMember0[8];
	struct Struct_248_t StructMember1;
} Struct_1016_t;

typedef struct Struct_1040_t {
	char StructMember0[6];
} Struct_1040_t;

typedef struct Struct_1072_t {
	char StructMember0;
	char StructMember1;
	struct Struct_1040_t StructMember2;
	[size_is(StructMember1)] long StructMember3[];
} Struct_1072_t;

typedef struct Struct_1086_t {
	[unique]struct Struct_1072_t* StructMember0;
	long StructMember1;
} Struct_1086_t;

typedef struct Struct_1144_t {
	long StructMember0;
	[size_is(StructMember0)] struct Struct_1086_t StructMember1[];
} Struct_1144_t;

typedef struct Struct_1206_t {
	hyper StructMember0;
	hyper StructMember1;
	hyper StructMember2;
	hyper StructMember3;
	hyper StructMember4;
	struct Struct_316_t StructMember5;
} Struct_1206_t;

// procnum 0:
// Creates a connection record to the Security Package Manager (SPM or SPMGR)
// LogonProcessName: optional. May be anything
// ClientMode: optional
//   - 0: not specified
//   - 1: kernel client
//   - 2: user client
// LsaConnectUntrusted -> CreateRpcConnection
long SspirConnectRpc(
    [in][unique][string] unsigned char* LogonProcessName, 
    [in]long ClientMode, 
    [out]long *PackageCount, 
    [out]PLSA_OPERATIONAL_MODE_LPC OperationalMode, 
    [out][context_handle] void** LsaHandle);

// procnum 1:
// LsaDeregisterLogonProcess -> DisconnectRpcConnection
long SspirDisconnectRpc(
    [in][out][context_handle] void** LsaHandle);

// procnum 2:
// The server function is the same as SspirDisconnectRpc
long SspirDisconnectRpc2(
    [in][out][context_handle] void** LsaHandle);
    
// procnum 3:
// LsaCallAuthenticationPackage -> CallRpcSPM
// LsaLookupAuthenticationPackage -> CallRpcSPM
long SspirCallRpc(
    [in][context_handle] void* LsaHandle, 
    [in]long SubmitBufferLength, 
    [in][size_is(SubmitBufferLength)] char* ProtocolSubmitBuffer, 
    [out]long* ReturnBufferLength, 
    [out][ref][size_is(, *ReturnBufferLength)] char** ProtocolReturnBuffer, 
    [out]SPMCallbackAPI* Args);

// procnum 4:
// LsaAcquireCredentialsHandle -> SspipAcquireCredentialsHandle
long SspirAcquireCredentialsHandle(
    [in][context_handle] void* LsaHandle, 
    [in]struct Struct_172_t* arg_1, 
    [in][unique]struct Struct_222_t* arg_2, 
    [in]struct Struct_222_t* arg_3, 
    [in]long arg_4, 
    [in][unique]struct Struct_248_t* arg_5, 
    [in]struct Struct_282_t* arg_6, 
    [in]hyper arg_7, 
    [in]hyper arg_8, 
    [in]long arg_9, 
    [out]struct Struct_304_t* arg_10, 
    [out]struct Struct_316_t* arg_11, 
    [in]SPMCallbackAPI* arg_12, 
    [out]SPMCallbackAPI* arg_13);

// procnum 5:
// LsaFreeCredentialsHandle -> SspipFreeCredentialsHandle
long SspirFreeCredentialsHandle(
    [in][context_handle] void* LsaHandle, 
    [in]struct Struct_172_t* arg_1, 
    [in]struct Struct_304_t* arg_2, 
    [out]SPMCallbackAPI* arg_3);

// procnum 6:
// LsaInitializeSecurityContext -> SspipProcessSecurityContext
// LsaAcceptSecurityContext -> SspipProcessSecurityContext
long SspirProcessSecurityContext(
    [in][context_handle] void* LsaHandle, 
    [in]struct Struct_172_t* arg_1, 
    [in][out]long* arg_2, 
    [in][unique]struct Struct_222_t* arg_3, 
    [in]struct Struct_304_t* arg_4, 
    [in]struct Struct_304_t* arg_5, 
    [in]long arg_6, 
    [in]long arg_7, 
    [in][unique][size_is(32)] char* arg_8, 
    [in][unique][string] wchar_t* arg_9, 
    [in]struct Struct_446_t* arg_10, 
    [in][ref]struct Struct_516_t* arg_11, 
    [out]struct Struct_446_t* arg_12, 
    [out][ref]struct Struct_516_t** arg_13, 
    [out] SEC_BUFFER_LPC* arg_14, 
    [out]struct Struct_304_t* arg_15, 
    [out]long* arg_16, 
    [out]struct Struct_316_t* arg_17, 
    [out]long* arg_18, 
    [in]SPMCallbackAPI* arg_19, 
    [out]SPMCallbackAPI* arg_20);

// procnum 7:
// LsaDeleteSecurityContext -> SspipDeleteSecurityContext
long SspirDeleteSecurityContext(
    [in][context_handle] void* LsaHandle, 
    [in]struct Struct_172_t* arg_1, 
    [in]struct Struct_304_t* arg_2, 
    [out]SPMCallbackAPI* arg_3);

// procnum 8:
// I believe: QueryCredentialsAttributes (Schannel) -> SspirNegQueryContextAttributes
long SspirSslQueryCredentialsAttributes(
    [in][context_handle] void* LsaHandle, 
    [in]struct Struct_172_t* arg_1, 
    [in]struct Struct_304_t* arg_2, 
    [in]long arg_3, 
    [out][switch_is(arg_3)]union union_624* arg_4);

// procnum 9:
// QueryContextAttributes (Negotiate) -> SspirNegQueryContextAttributes
long SspirNegQueryContextAttributes(
    [in][context_handle] void* LsaHandle, 
    [in]struct Struct_172_t* arg_1, 
    [in]struct Struct_304_t* arg_2, 
    [in]long arg_3, 
    [out][switch_is(arg_3)]union union_750* arg_4);

// procnum a:
// I believe: SetCredentialsAttributes (Schannel) -> SspirNegQueryContextAttributes
long SspirSslSetCredentialsAttributes(
    [in][context_handle] void* LsaHandle, 
    [in]struct Struct_172_t* arg_1, 
    [in]struct Struct_304_t* arg_2, 
    [in]struct Struct_888_t* arg_3);

// procnum b:
// LsaApplyControlToken -> ApplyControlToken
long SspirApplyControlToken(
    [in][context_handle] void* LsaHandle, 
    [in]struct Struct_172_t* arg_1, 
    [in]struct Struct_304_t* arg_2, 
    [in]struct Struct_446_t* arg_3);

// procnum c:
// LsaLogonUser -> SspipLogonUser
long SspirLogonUser(
    [in][context_handle] void* LsaHandle, 
    [in]struct Struct_172_t* arg_1, 
    [in]struct Struct_984_t* arg_2, 
    [in]/* enum_16 */ short arg_3, 
    [in]long arg_4, 
    [in]struct Struct_282_t* arg_5, 
    [in]struct Struct_1016_t* arg_6, 
    [in][unique]struct Struct_1144_t* arg_7, 
    [in]long arg_8, 
    [in][unique][size_is(32)] char* arg_9, 
    [out]long* arg_10, 
    [out]hyper* arg_11, 
    [out]long* arg_12, 
    [in][out]struct Struct_248_t* arg_13, 
    [out]hyper* arg_14, 
    [out]struct Struct_1206_t* arg_15);

// procnum d:
long SspirLookupAccountSid(
    [in][context_handle] void* LsaHandle, 
    [in]struct Struct_172_t* arg_1, 
    [in]struct Struct_1072_t* arg_2, 
    [out]struct Struct_222_t* arg_3, 
    [out]struct Struct_222_t* arg_4, 
    [out][ref]/* enum_16 */ short* arg_5);

// procnum e:
// GetUserNameExW -> SspipGetUserName
long SspirGetUserName(
    [in][context_handle] void* LsaHandle, 
    [in]struct Struct_172_t* arg_1, 
    [in]long arg_2, 
    [out]struct Struct_222_t* arg_3, 
    [out]long* arg_4);

// procnum f:
// InitState
long SspirGetInprocDispatchTable(
    [in][context_handle] void* LsaHandle, 
    [out]unsigned __int3264* arg_1);
} 