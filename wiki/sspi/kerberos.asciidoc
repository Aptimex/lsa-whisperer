ifdef::env-github[]
:note-caption: :pencil2:
endif::[]

= Kerberos
:toc: macro

The kerberos authentication package (AP) supports domain logons.
It is also the security package (SP) for Microsoft kerberos v1.0 authentication on a network.

toc::[]

== Functions

The protocol messages that kerberos supports is partially documented on MSDNfootnote:[https://learn.microsoft.com/en-us/windows/win32/api/ntsecapi/ne-ntsecapi-kerb_protocol_message_type[KERB_PROTOCOL_MESSAGE_TYPE enumeration (ntsecapi.h)]].
Some of the documented message IDs are also not correct.
The full and correct list of messages that kerberos supports is provided here:

[%header]
|===
| Id     | Message Type                   | CLI Support        | NT Version | Internal Function
| `0x00` | `DebugRequest`                 | :heavy_minus_sign: | `>=5.0`    | `KerbDebugRequest`
| `0x01` | `QueryTicketCache`             | :heavy_check_mark: | `>=5.0`    | `KerbQueryTicketCache`
| `0x02` | `ChangeMachinePassword`        | :heavy_check_mark: | `>=5.0`    | `KerbChangeMachinePassword`
| `0x03` | `VerifyPac`                    |                    | `>=5.0`    | `KerbVerifyPac`
| `0x04` | `RetrieveTicket`               | :heavy_check_mark: | `>=5.0`    | `KerbRetrieveTicket`
| `0x05` | `UpdateAddresses`              |                    | `>=5.0`    | `KerbSetIpAddresses`
| `0x06` | `PurgeTicketCache`             | :heavy_check_mark: | `>=5.0`    | `KerbPurgeTicket`
| `0x07` | `ChangePassword`               |                    | `>=5.0`    | `KerbChangePassword`
| `0x08` | `RetrieveEncodedTicket`        | :heavy_check_mark: | `>=5.0`    | `KerbRetrieveEncodedTicket`
| `0x09` | `DecryptData`                  | :heavy_minus_sign: | `>=5.0`    | `KerbDecryptMessage`
| `0x0A` | `AddBindingCacheEntry`         | :heavy_minus_sign: | `>=5.0`    | `KerbAddBindingCacheEntry`
| `0x0B` | `SetPassword`                  |                    | `>=5.0`    | `KerbSetPassword`
| `0x0C` | `SetPasswordEx`                |                    | `>=5.0`    | `KerbSetPassword`
| `0x0D` | `VerifyCredentials`            |                    | `>=5.1`    | `KerbVerifyCredentials`
| `0x0E` | `QueryTicketCacheEx`           | :heavy_check_mark: | `>=5.1`    | `KerbQueryTicketCacheEx`
| `0x0F` | `PurgeTicketCacheEx`           | :heavy_check_mark: | `>=5.1`    | `KerbPurgeTicketEx`
| `0x10` | `RefreshSmartcardCredentials`  |                    | `>=5.2`    | `KerbRefreshSmartcardCredentials`
| `0x11` | `AddExtraCredentials`          | :heavy_check_mark: | `>=5.0`    | `KerbAddExtraCredential`
| `0x12` | `QuerySupplementalCredentials` |                    | `>=5.2`    | `KerbQuerySupplementalCredentials`
| `0x13` | `TransferCredentials`          | :heavy_check_mark: | `>=6.0`    | `KerbTransferCredentials`
| `0x14` | `QueryTicketCacheEx2`          | :heavy_check_mark: | `>=6.0`    | `KerbQueryTicketCacheEx2`
| `0x15` | `SubmitTicket`                 |                    | `>=6.0`    | `KerbSubmitTicket`
| `0x16` | `AddExtraCredentialsEx`        | _Planned_          | `>=6.0`    | `KerbAddExtraCredentialEx`
| `0x17` | `QueryKdcProxyCache`           | :heavy_check_mark: | `>=6.2`    | `KerbQueryKdcProxyCache`
| `0x18` | `PurgeKdcProxyCache`           | :heavy_check_mark: | `>=6.2`    | `KerbPurgeKdcProxyCache`
| `0x19` | `QueryTicketCacheEx3`          | :heavy_check_mark: | `>=6.2`    | `KerbQueryTicketCacheEx3`
| `0x1a` | `CleanupMachinePkinitCreds`    | :heavy_check_mark: | `>=6.2`    | `KerbCleanupMachinePkinitCreds`
| `0x1b` | `AddBindingCacheEntryEx`       | :heavy_check_mark: | `>=6.2`    | `KerbAddBindingCacheEntryEx`
| `0x1c` | `QueryBindingCache`            | :heavy_check_mark: | `>=6.2`    | `KerbQueryBindingCache`
| `0x1d` | `PurgeBindingCache`            | :heavy_check_mark: | `>=6.2`    | `KerbPurgeBindingCache`
| `0x1e` | `PinKdc`                       | :heavy_check_mark: | `>=6.2`    | `KerbPinKdc`
| `0x1f` | `UnpinAllKdcs`                 | :heavy_check_mark: | `>=6.2`    | `KerbUnpinAllKdcs`
| `0x20` | `QueryDomainExtendedPolicies`  | :heavy_check_mark: | `>=6.2`    | `KerbQueryDomainExtendedPolicies`
| `0x21` | `QueryS4U2ProxyCache`          | :heavy_check_mark: | `>=6.2`    | `KerbQueryS4U2ProxyCache`
| `0x22` | `RetrieveKeyTab`               | :heavy_minus_sign: | `>=10.0`   | `KerbRetrieveKeyTab`
| `0x23` | `RefreshPolicy`                | :heavy_minus_sign: | `>=10.0`   | ?
| `0x24` | `PrintCloudKerberosDebug`      | :heavy_check_mark: | `>=10.0`   | `KerbPrintCloudKerberosDebug`
|===

NOTE: The internal function for each message type will be located in `kerberos.dll`.

Messages `DebugRequest` and `DecryptData` and their internal functions are only available in debug builds of `kerberos.dll`.
The `RefreshPolicy` message is also not available in release builds of `kerberos.dll`, likely due to the same reason, but this could not be confirmed.

=== AddExtraCredentials

Documented in `NTSecApi.h` as adding "server credentials" to a given logon session, only applicable during AcceptSecurityContext, and requiring TCB to alter "other" credentials.
The structure also contains a flags field that allows a user to add, replace, or removed the additional credential.

=== AddExtraCredentialsEx

Behaves the same as the `AddExtraCredentials` command but allows a user to add a list of "principal names" to the credential.

=== CleanupMachinePkinitCreds

Luid must be SYSTEM_LUID (999) or NETWORKSERVICE_LUID (996).

=== PinKdc

https://i.blackhat.com/USA-22/Wednesday/US-22-Forshaw-Taking-Kerberos-To-The-Next-Level.pdf[Pin a KDC.]
The command may not be called from WOW64 clients.

```
kerberos PinKdc [--luid {session id}]
```

=== PrintCloudKerberosDebug

Get cloud kerberos configuration information.

```
kerberos PrintCloudKerberosDebug
```

=== PurgeKdcProxyCache

The `PurgeKdcProxyCache` command has not been fully tested, but should should remove cached KDC proxy tickets.
`SeTcbPrivilege` is required to specify another logon session.

```
kerberos PurgeKdcProxyCache [--luid {session id}]
```

=== PurgeTicketCache

Purge tickets in the ticket cache for the current logon session.
A server name and realm may be used to filter which tickets should be purged.
The server name and realm must both be specified to be used.
If both are not specified then all tickets will be purged.
`SeTcbPrivilege` is required to specify another logon session.

```
kerberos PurgeTicketCache [--luid {session id}] [--server-name {name}] [--server-realm {name}]
```

=== PurgeTicketCacheEx

Functions the same as the `PurgeTicketCache` but allows you to specify a client name and realm to filter tickets by.
The client name and realm must both be specified to be used.
The command also allows you to explicitly purge all tickets.
If purging all tickets is explicitly specified then all ticket filters will be ignored.

```
kerberos PurgeTicketCacheEx [--luid {session id}] [--all] [--client-name {name}] [--client-realm {name}] [--server-name {name}] [--server-realm {name}]
```

=== QueryKdcProxyCache

The `QueryKdcProxyCache` command has not been fully tested, but should provide information about KDC proxy cached tickets.
`SeTcbPrivilege` is required to specify another logon session.

```
kerberos QueryKdcProxyCache [--luid {session id}]
```

=== QueryTicketCache

Show the server name, realm name, start time, end time, renew time, encryption type, and flags for each ticket in the ticket cache for the current logon session.
`SeTcbPrivilege` is required to specify another logon session.

```
kerberos QueryTicketCache [--luid {session id}]
```

=== QueryTicketCacheEx

Functions the same as the `QueryTicketCache` but will return additionally return the client name and realm for each ticket.

```
kerberos QueryTicketCacheEx [--luid {session id}]
```

=== QueryTicketCacheEx2

Functions the same as the `QueryTicketCacheEx` but will return additionally return the session key type and branch ID for each ticket.

```
kerberos QueryTicketCacheEx2 [--luid {session id}]
```

=== QueryTicketCacheEx3

Functions the same as the `QueryTicketCacheEx2` but will return additionally return the cache flags and KDC name for each ticket.

```
kerberos QueryTicketCacheEx3 [--luid {session id}]
```

=== RetrieveKeyTab

Flags is ignored.

=== TransferCredentials

Transfer data between two kerberos logon sessions.
The specific data that is transferred and privileges that may be required are still being determined.
The function only accepts the cleanup credentials and optimistic logon flags.

```
kerberos TransferCredentials --sluid {session id} --dluid {session id} [--cleanup-credentials] [--optimistic-logon]
```